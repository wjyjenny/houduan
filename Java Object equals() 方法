package com.company;
//Java Object equals() 方法
//Java String类Java Object 类
//
//Object equals() 方法用于比较两个对象是否相等。
//
//equals() 方法比较两个对象，是判断两个对象引用指向的是同一个对象，即比较 2 个对象的内存地址是否相等。
//
//注意：如果子类重写了 equals() 方法，就需要重写 hashCode() 方法，比如 String 类就重写了 equals() 方法，同时也重写了 hashCode() 方法。
//
//语法
//object.equals(Object obj)
//参数
//obj - 要比较的对象。
//
//返回值
//如果两个对象相等返回 true，否则返回 false。
public class RunobTest28 {
    public static void main(String[] args) {

        // Object 类使用 equals() 方法
        // 创建两个对象
        Object obj1 = new Object();
        Object obj2 = new Object();

        // 判断 obj1 与 obj2 是否相等
        // 不同对象，内存地址不同，不相等，返回 false
        System.out.println(obj1.equals(obj2)); // false

        // obj1 赋值给 obj3
        // String 重写了 equals() 方法
        // 对象引用，内存地址相同，相等，返回 true
        Object obj3 = obj1;
        System.out.println(obj1.equals(obj3)); // true


        // String 类使用 equals() 方法
        // 创建两个对象
        String obj11 = new String();
        String obj21 = new String();

        // 判断 obj11 与 obj21 是否相等
        // 初始化的两个对象都为 null，所以是相等，返回 true
        System.out.println(obj11.equals(obj21)); // true

        // 给对象赋值
        obj11 = "Runoob";
        obj21 = "Google";

        // 判断 obj1 与 obj2 是否相等
        // 两个值不同，内存地址也不同，所以不相等，返回 false
        System.out.println(obj11.equals(obj21)); // false
    }
}
