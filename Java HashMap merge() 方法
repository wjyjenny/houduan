package com.company;
//Java HashMap merge() 方法
//merge() 方法会先判断指定的 key 是否存在，如果不存在，则添加键值对到 hashMap 中。
//merge() 方法的语法为：
//hashmap.merge(key, value, remappingFunction)
//注：hashmap 是 HashMap 类的一个对象。
//参数说明：
//key - 键
//value - 值
//remappingFunction - 重新映射函数，用于重新计算值
//返回值
//如果 key 对应的 value 不存在，则返回该 value 值，如果存在，则返回通过 remappingFunction 重新计算后的值。
import java.util.HashMap;
public class RunobTest24 {
    public static void main(String[] args) {
        //创建一个HashMap
        HashMap<String, Integer> prices = new HashMap<>();

        // 往 HashMap 插入映射
        prices.put("Shoes", 200);
        prices.put("Bag", 300);
        prices.put("Pant", 150);
        System.out.println("HashMap: " + prices);

        int returnedValue = prices.merge("Shirt", 100, (oldValue, newValue) -> oldValue + newValue);
        System.out.println("Price of Shirt: " + returnedValue);

        // 输出更新后的 HashMap
        System.out.println("Updated HashMap: " + prices);
        // 创建一个 HashMap
        HashMap<String, String> countries = new HashMap<>();

        // 往HashMap插入映射项
        countries.put("Washington", "America");
        countries.put("Canberra", "Australia");
        countries.put("Madrid", "Spain");
        System.out.println("HashMap: " + countries);

        //合并 key为 Washington的映射
        String returnedValue2 = countries.merge("Washington", "USA", (oldValue, newValue) -> oldValue + "/" + newValue);
        System.out.println("Washington: " + returnedValue2);

        //输出更新后的HashMap
        System.out.println("Updated HashMap: " + countries);
    }
}
